version: '3'
services:
    web:
        build:
            context: .
            dockerfile: etc/docker/nginx.Dockerfile
        ports:
            - "80:80"
            - "443:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        restart: always
        depends_on:
            - php
            - mysql
    composer:
        image: "composer"
        volumes:
            - "./web/app/composer.json:/app/composer.json"
            - "./web/app/composer.lock:/app/composer.lock"
            - vendor:/app/vendor
        command: install --ignore-platform-reqs
    php:
        build:
            context: .
            dockerfile: etc/docker/php.Dockerfile
            args:
                - PHP_VERSION=${PHP_VERSION}
        container_name: php
        env_file:
            - ".env"
        restart: always
        volumes:
            - vendor:/var/www/html/app/vendor
        depends_on:
            - mysql
    mysql:
        build:
            context: .
            dockerfile: etc/docker/mysql.Dockerfile
            args:
                - MYSQL_VERSION=${MYSQL_VERSION}            
        container_name: ${MYSQL_HOST}
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        volumes:
            - db-data:/var/lib/mysql

volumes:
    vendor:
    db-data: