version: '3'
services:
    web:
        image: nginx:alpine
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template" # TODO: ssl
            - "./etc/ssl:/etc/ssl" # TODO: add instead of volumes?
            - "./web:/var/www/html" # TODO: add instead of volumes?
        ports:
            - "80:80"
            - "443:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysql
    composer:
        image: "composer"
        volumes:
            - "./web/app:/app"
        command: install
    php:
        build:
            context: ./etc/docker
            dockerfile: php.Dockerfile
            args:
                - PHP_VERSION=${PHP_VERSION}
        container_name: php
        env_file:
            - ".production.env"
        restart: always
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini" # TODO: add instead of volumes
            - "./web:/var/www/html" # TODO: add instead of volumes
    mysql:
        image: mysql:${MYSQL_VERSION}
        container_name: ${MYSQL_HOST}
        restart: always
        env_file:
            - ".production.env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        volumes:
            - "./data/db/mysql:/var/lib/mysql" # TODO: named volume?